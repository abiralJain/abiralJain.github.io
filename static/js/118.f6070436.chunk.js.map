{"version":3,"file":"static/js/118.f6070436.chunk.js","mappings":"8MAKMA,EAAuBC,EAAAA,cAAoB,IAwEjD,SAASC,EAAT,GAAsD,IAA7BC,EAA6B,EAA7BA,SAAaC,GAAgB,YAClD,OAAQH,EAAAA,cAAoBD,EAAqBK,SAAU,CAAEC,MAAOF,GAAgBD,G,8IC7DlFI,GAAYC,EAAAA,EAAAA,IAAW,gBAAGC,EAAH,EAAGA,YAAH,MAAsB,CAC/CC,KAAM,CACFC,QAAS,UAEbC,UAAS,QACLC,QAAS,QACTC,OAAQ,YACRC,OAAQ,SAEPN,EAAYO,KAAK,MAAQ,CACtBD,OAAQ,QAIhBE,WAAU,QACNH,OAAQ,oBACRI,MAAO,MACPC,WAAY,QACZC,QAAS,OAERX,EAAYO,KAAK,MAAQ,CACtBF,OAAQ,gBACRI,MAAO,OACPG,UAAW,WAGnBC,UAAS,QACLT,QAAS,OACTU,oBAAqB,iBACrBC,QAAS,OACT,QAAS,CACLC,gBAAiB,IACjBC,cAAe,IACfb,QAAS,OACTU,oBAAqB,iBACrBC,QAAS,SAEb,QAAS,CACLN,MAAO,SAGVT,EAAYO,KAAK,MAAQ,CACtBH,QAAS,QACTQ,UAAW,SACX,QAAS,CACLR,QAAS,SAEb,QAAS,CACLc,aAAc,SAI1BC,UAAS,QACLf,QAAS,OACTU,oBAAqB,yBACrBC,QAAS,OACT,QAAS,CACLN,MAAO,SAGVT,EAAYO,KAAK,MAAQ,CACtBH,QAAS,QACTQ,UAAW,SACX,QAAS,CACLM,aAAc,aA+C9B,EAzCmB,WACf,IAAME,EAAUtB,IAChB,OACI,0BACI,UAACL,EAAD,CAAe4B,UAAW,UAAWC,eAAgB,OAArD,WACI,iBAAKC,UAAWH,EAAQnB,KAAxB,WACI,gBAAKsB,UAAWH,EAAQjB,SAAUqB,IAAKC,EAAMC,IAAK,eAClD,cAAGH,UAAWH,EAAQZ,UAAtB,4LAKA,iBAAKe,UAAWH,EAAQP,SAAxB,WACI,gBAAKW,IAAKG,EAAKD,IAAK,cACpB,gBAAKF,IAAKI,EAAKF,IAAK,cACpB,gBAAKF,IAAKK,EAAKH,IAAK,cACpB,4BACI,gBAAKF,IAAKM,EAAKJ,IAAK,cACpB,gBAAKF,IAAKO,EAAKL,IAAK,uBAIhC,iBAAKH,UAAWH,EAAQnB,KAAxB,WACI,gBAAKsB,UAAWH,EAAQjB,SAAUqB,IAAKQ,EAAMN,IAAK,eAClD,cAAGH,UAAWH,EAAQZ,UAAtB,gIAIA,iBAAKe,UAAWH,EAAQD,SAAxB,WACI,gBAAKK,IAAKS,EAAKP,IAAK,UACpB,gBAAKF,IAAKU,EAAKR,IAAK,UACpB,gBAAKF,IAAKW,EAAKT,IAAK,UACpB,gBAAKF,IAAKY,EAAKV,IAAK,UACpB,gBAAKF,IAAKa,EAAKX,IAAK,sB","sources":["../node_modules/react-loading-skeleton/dist/index.mjs","pages/DesignPage.jsx"],"sourcesContent":["import React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties({ baseColor, highlightColor, width, height, borderRadius, circle, direction, duration, enableAnimation = defaultEnableAnimation, }) {\n    const style = {};\n    if (direction === 'rtl')\n        style['--animation-direction'] = 'reverse';\n    if (typeof duration === 'number')\n        style['--animation-duration'] = `${duration}s`;\n    if (!enableAnimation)\n        style['--pseudo-element-display'] = 'none';\n    if (typeof width === 'string' || typeof width === 'number')\n        style.width = width;\n    if (typeof height === 'string' || typeof height === 'number')\n        style.height = height;\n    if (typeof borderRadius === 'string' || typeof borderRadius === 'number')\n        style.borderRadius = borderRadius;\n    if (circle)\n        style.borderRadius = '50%';\n    if (typeof baseColor !== 'undefined')\n        style['--base-color'] = baseColor;\n    if (typeof highlightColor !== 'undefined')\n        style['--highlight-color'] = highlightColor;\n    return style;\n}\nfunction Skeleton({ count = 1, wrapper: Wrapper, className: customClassName, containerClassName, containerTestId, circle = false, style: styleProp, ...originalPropsStyleOptions }) {\n    var _a, _b;\n    const contextStyleOptions = React.useContext(SkeletonThemeContext);\n    const propsStyleOptions = { ...originalPropsStyleOptions };\n    // DO NOT overwrite style options from the context if `propsStyleOptions`\n    // has properties explicity set to undefined\n    for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n        if (typeof value === 'undefined') {\n            delete propsStyleOptions[key];\n        }\n    }\n    // Props take priority over context\n    const styleOptions = {\n        ...contextStyleOptions,\n        ...propsStyleOptions,\n        circle,\n    };\n    // `styleProp` has the least priority out of everything\n    const style = {\n        ...styleProp,\n        ...styleOptionsToCssProperties(styleOptions),\n    };\n    let className = 'react-loading-skeleton';\n    if (customClassName)\n        className += ` ${customClassName}`;\n    const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n    const elements = [];\n    // Without the <br />, the skeleton lines will all run together if\n    // `width` is specified\n    for (let i = 0; i < count; i++) {\n        const skeletonSpan = (React.createElement(\"span\", { className: className, style: style, key: i }, \"\\u200C\"));\n        if (inline) {\n            elements.push(skeletonSpan);\n        }\n        else {\n            elements.push(React.createElement(React.Fragment, { key: i },\n                skeletonSpan,\n                React.createElement(\"br\", null)));\n        }\n    }\n    return (React.createElement(\"span\", { className: containerClassName, \"data-testid\": containerTestId, \"aria-live\": \"polite\", \"aria-busy\": (_b = styleOptions.enableAnimation) !== null && _b !== void 0 ? _b : defaultEnableAnimation }, Wrapper\n        ? elements.map((el, i) => React.createElement(Wrapper, { key: i }, el))\n        : elements));\n}\n\nfunction SkeletonTheme({ children, ...styleOptions }) {\n    return (React.createElement(SkeletonThemeContext.Provider, { value: styleOptions }, children));\n}\n\nexport { SkeletonTheme, Skeleton as default };\n","import React from 'react'\nimport { SkeletonTheme } from 'react-loading-skeleton'\nimport { makeStyles } from '@material-ui/styles'\nimport Img1 from '../assets/DesignPageImgs/headers/uiDesigns.png'\nimport Img2 from '../assets/DesignPageImgs/headers/3dDesigns.png'\n\nimport UI1 from '../assets/DesignPageImgs/ui-designs/u1.png'\nimport UI2 from '../assets/DesignPageImgs/ui-designs/u2.png'\nimport UI3 from '../assets/DesignPageImgs/ui-designs/u3.png'\nimport UI4 from '../assets/DesignPageImgs/ui-designs/u4.png'\nimport UI5 from '../assets/DesignPageImgs/ui-designs/u5.png'\nimport TD1 from '../assets/DesignPageImgs/3d-designs/i1.png'\nimport TD2 from '../assets/DesignPageImgs/3d-designs/i2.gif'\nimport TD3 from '../assets/DesignPageImgs/3d-designs/i3.gif'\nimport TD4 from '../assets/DesignPageImgs/3d-designs/i4.png'\nimport TD5 from '../assets/DesignPageImgs/3d-designs/i5.png'\n\nconst useStyles = makeStyles(({ breakpoints }) => ({\n    cont: {\n        padding: '50px 0'\n    },\n    titleImg: {\n        display: 'block',\n        margin: '30px auto',\n        height: '2.8em',\n\n        [breakpoints.down('xs')]: {\n            height: '2em'\n        }\n    },\n\n    titleText: {\n        margin: '60px 0 60px 100px',\n        width: '40%',\n        lineHeight: '1.6em',\n        opacity: '72%',\n\n        [breakpoints.down('sm')]: {\n            margin: '30px 0 60px 0',\n            width: '100%',\n            textAlign: 'center'\n        }\n    },\n    imgCont1: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridGap: '80px',\n        '& div': {\n            gridColumnStart: '1',\n            gridColumnEnd: '4',\n            display: 'grid',\n            gridTemplateColumns: 'repeat(2, 1fr)',\n            gridGap: '100px'\n        },\n        '& img': {\n            width: '100%'\n        },\n\n        [breakpoints.down('sm')]: {\n            display: 'block',\n            textAlign: 'center',\n            '& div': {\n                display: 'block'\n            },\n            '& img': {\n                marginBottom: '3em'\n            }\n        }\n    },\n    imgCont2: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(2, 1fr) 1.125fr',\n        gridGap: '80px',\n        '& img': {\n            width: '100%'\n        },\n\n        [breakpoints.down('sm')]: {\n            display: 'block',\n            textAlign: 'center',\n            '& img': {\n                marginBottom: '3em'\n            }\n        }\n    }\n}))\n\nconst DesignPage = () => {\n    const classes = useStyles()\n    return (\n        <div>\n            <SkeletonTheme baseColor={'#393939'} highlightColor={'#444'}>\n                <div className={classes.cont}>\n                    <img className={classes.titleImg} src={Img1} alt={'UI Design'} />\n                    <p className={classes.titleText}>\n                        As a designer, I've been practicing to sharpen my skills and shape some fun\n                        stories. Each of these designs contains a unique style and according to\n                        that, I try to design UI.\n                    </p>\n                    <div className={classes.imgCont1}>\n                        <img src={UI1} alt={'Design 1'} />\n                        <img src={UI2} alt={'Design 2'} />\n                        <img src={UI3} alt={'Design 3'} />\n                        <div>\n                            <img src={UI4} alt={'Design 4'} />\n                            <img src={UI5} alt={'Design 5'} />\n                        </div>\n                    </div>\n                </div>\n                <div className={classes.cont}>\n                    <img className={classes.titleImg} src={Img2} alt={'3d Design'} />\n                    <p className={classes.titleText}>\n                        Created some 3d designs on Cinema 4d just to know how 3d designs are made\n                        and how we can play with the animation.\n                    </p>\n                    <div className={classes.imgCont2}>\n                        <img src={TD1} alt={'3D 1'} />\n                        <img src={TD2} alt={'3D 2'} />\n                        <img src={TD3} alt={'3D 3'} />\n                        <img src={TD4} alt={'3D 4'} />\n                        <img src={TD5} alt={'3D 5'} />\n                    </div>\n                </div>\n            </SkeletonTheme>\n        </div>\n    )\n}\n\nexport default DesignPage\n"],"names":["SkeletonThemeContext","React","SkeletonTheme","children","styleOptions","Provider","value","useStyles","makeStyles","breakpoints","cont","padding","titleImg","display","margin","height","down","titleText","width","lineHeight","opacity","textAlign","imgCont1","gridTemplateColumns","gridGap","gridColumnStart","gridColumnEnd","marginBottom","imgCont2","classes","baseColor","highlightColor","className","src","Img1","alt","UI1","UI2","UI3","UI4","UI5","Img2","TD1","TD2","TD3","TD4","TD5"],"sourceRoot":""}